h1. &lt;outputs&gt;

List all possible ADX outputs.
A condition could be specified for each output to make it alternative.

* Require
* [1 ]
* Parent node: "&lt;page&gt;":manifest_root.textile#page--control, "&lt;control&gt;":manifest_root.textile#page--control
* Child nodes: "&lt;output&gt;":#output

*Also see*

"Generation Rules":generation_rules.textile

h3. Attributes

{background:#007dc5; color:white}. |Attribute name|Require|Type|Description|
|defaultOutput|true|"xsd:NCName":http://www.schemacentral.com/sc/xsd/t-xsd_NCName.html|Id of the default output to use when none of the outputs condition return true.|

<pre><code class="xml"><outputs defaultOutput="html">
  <output id="flash">
     <description>Use Flash controls when Flash is available</description>
     <condition><![CDATA[ Browser.Support("Flash") And Browser.Support("Javascript") ]]></condition>
     <content fileName="swfObject.js" mode="share" position="foot" type="javascript" />
     <content fileName="expressIntall.swf" mode="share" position="none" type="flash" />
     <content fileName="flashEmbed.html" mode="dynamic" position="placeholder" type="html" />
     <content fileName="flashEmbed.js" mode="dynamic" position="foot" type="javascript" />
     <content fileName="default.swf" mode="static" position="none" type="flash" />
  </output>
  <output id="html" defaultGeneration="false">
     <description>Default HTML fallback output</description>
     <content type="css" fileName="default.css" mode="static" position="head" />
     <content type="html" fileName="default.html" mode="dynamic" position="placeholder" />
  </output>
</outputs></code></pre>

h2. &lt;output&gt;

Output of the ADX.
One for each kind of output.

* At least one is require.
* [1..n]
* Parent node: "&lt;outputs&gt;":#outputs
* Child nodes: "&lt;description&gt;":#description, "&lt;condition&gt;":#condition, "&lt;content&gt;":#content

*Remarks*

The order of the <output> is important.
The system evaluate <output> condition in the sequence order and break the evaluation once it reach a valid condition.
If no condition matches then it the system uses the &lt;output&gt; specified in the _defaultOutput_ attribute of the "&lt;outputs&gt;":#outputs tag.

*Recommendation*

We recommend to place the fall-back output in the last position.

*Also see*

"Output Selection Rules":generation_rules.textile#output-selection-rules
"Output Max. iterations Rules":generation_rules.textile#output-max-iterations-rules

h3. Attributes

{background:#007dc5; color:white}. |Attribute name|Require|Type|Description|
|id|true|"xsd:NCName":http://www.schemacentral.com/sc/xsd/t-xsd_NCName.html|Unique identifier of the current output.|
|masterPage *%{background:orange;color:#222;padding:0 10px;}ADP only%*|true| "xsd:normalizedString":http://www.schemacentral.com/sc/xsd/t-xsd_normalizedString.html| Indicates the name of the file in the dynamic folder that will be used as a master page. |
|defaultGeneration|false|"xsd:boolean":http://www.schemacentral.com/sc/xsd/t-xsd_boolean.html|Indicates if the system must generate or not the default controls. (default false)|
|maxIterations *%{background:green;color:white;padding:0 10px;}ADC only%*|false|"numberPattern":manifest.textile#2-number-pattern|Only take in account for question(s) inside a loop.
Indicates the maximum of iterations that could be managed by the ADC.
If a finite bound value is set, the engine will produce all expected iterations and stop immediately.
The next page will generate all other expected iterations until the engine reach the latest iteration, then it generate all remain controls merged into the same page|

h2. &lt;description&gt;

Full free text to describes the aim of the output

* "xsd:string":http://www.schemacentral.com/sc/xsd/t-xsd_string.html
* Optional
* [0..1]
* Parent node: "&lt;output&gt;":#output

<pre><code class="xml"><output id="html">
  <description>HTML fallback when no output conditions match</description>
   ...
</output></code></pre>

h2. &lt;condition&gt;

AskiaScript code evaluated to determine if the current output should be use.
The AskiaScript should return a boolean value

* "xsd:string":http://www.schemacentral.com/sc/xsd/t-xsd_string.html
* Optional
* [0..1]
* Parent node: "&lt;output&gt;":#output

*Also see*

"Output Selection Rules":generation_rules.textile#output-selection-rules

<pre><code class="xml"><output id="flash">
   <description>Use this output when Flash and Javascript is available</description>
   <condition><![CDATA[ Browser.Support("Flash") And Browser.Support("Javascript") ]]></condition>
   ...
</output></code></pre>

h2. &lt;content&gt;

Content used by the current output.

* At least one require
* [1..n]
* Parent node: "&lt;output&gt;":#output
* Child nodes: "&lt;attribute&gt;":#attribute, "&lt;yield&gt;":#yield

*Also see*

"Contents rules":generation_rules.textile#contents-rules

h3. Attributes

{background:#007dc5; color:white}. |Attribute name|Require|Type|Description|
|type|true|Enumeration based on "xsd:NCName":http://www.schemacentral.com/sc/xsd/t-xsd_NCName.html
*_text_*
Arbitrary text based content. Will be inserted as it is when static and interpreted when dynamic.
Also see "Text content rules":generation_rules.textile#text-content-rules
*_binary_*
Arbitrary binary content. Will not be inserted at all, expect if the &lt;yield&gt; node indicates how to insert it in the page.
The content must always be static or external.
Also see "Binary content rules":generation_rules.textile#binary-content-rules
*_html_*
HTML content. Will be inserted as it is when static, and interpreted when dynamic.
Also see "HTML content rules":generation_rules.textile#html-content-rules
*_javascript_*
Javascript content. Will be inserted using the &lt;script src /&gt;  tag when static or external
or using &lt;script&gt;&lt;/script&gt; tag when dynamic.
Also see "Javascript content rules":generation_rules.textile#javascript-content-rules
*_css_*
CSS content. Will be inserted using &lt;link href /&gt; tag when static or share
or using the &lt;style&lt;&gt;/style&gt; tag when dynamic.
Also see "CSS content rules":generation_rules.textile#css-content-rules
*_image_*
Image content. Will be inserted using the &lt;img src /&gt; tag.
The content must always be static or external.
Also see "Image content rules":generation_rules.textile#image-content-rules
*_video_*
Video content. Will be inserted using the &lt;video src/&gt; tag. (HTML5)
The content must always be static or external.
Also see "Video content rules":generation_rules.textile#video-content-rules
*_audio_*
Audio content. Will be inserted using the &lt;audio src/&gt; tag. (HTML5)
The content must always be static or share.
Also see "Audio content rules":generation_rules.textile#audio-content-rules
*_flash_*
Flash content. Will be inserted using the &lt;object /&gt; tag.
The content must always be static or external.
Also see "Flash content rules":generation_rules.textile#flash-content-rules | Indicates the type of the file, useful for the auto-generated HTML tags.|
|fileName|true|"xsd:normalizedString":http://www.schemacentral.com/sc/xsd/t-xsd_normalizedString.html|Name of the file use to generate the content.|
|mode|false|Enumeration based on "xsd:NCName":http://www.schemacentral.com/sc/xsd/t-xsd_NCName.html
*_share_*
The share content is always associated with a file and must be place in the @/Resources/Share/@ folder of the ADX.
The share content will be extract in the resources folder of the survey @/Resources/SurveyName/@.
This kind of content, could be share across ADXs and will not be overrides when it already exist in the folder.
*_static_*
The static content is always associated with a file and must be place in the @/Resources/Static/@ folder of the ADX.
The static content will be extract in the resources folder of the ADX @/Resources/SurveyName/ADXname/@.
*_dynamic_*
The dynamic content could be file (text based) or in-line code define in the definition of the content.
It could embed AskiaScript to execute.
When the content is a file, it must be place in the /Resources/Dynamic folder of the ADX.
The dynamic content will not be extract but load in memory.|Indicate how the content will be treat and where the system should find the content file. (default 'static')|
|position|false|Enumeration based on "xsd:NCName":http://www.schemacentral.com/sc/xsd/t-xsd_NCName.html
*_none_*
The resource will not be rendered.
But it's still available through HTTP request.
*_head_*
The resource will be inserted in the head section of the HTML document (*%{background:#c0392b; color: #FFF;}&lt;askia-head /&gt;%*).
Mostly use for CSS stylesheet.
*_placeholder_* *%{background:green;color:white;padding:0 10px;}ADC only%*
The resource will be inserted at the position of the ADC control.
Mostly use for the HTML injection.
*_foot_*
The resource will be inserted at the end of the document, just before the end of the closed body tag (*%{background:#c0392b; color: #FFF;}&lt;askia-foot /&gt;%*).
Mostly use for javascript insertion|Indicates how and where the system must render the current content. (default 'none')|

<pre><code class="xml"><content fileName="jQuery.ui.css" mode="share" position="head" type="css" />
<content fileName="styles.css" mode="static" position="head" type="css" />
<content fileName="dynamicStyles.css" mode="dynamic" position="head" type="css" />

<content fileName="jQuery.js" mode="share" position="foot" type="javascript" />
<content fileName="config.js" mode="dynamic" position="foot" type="javascript" />
<content fileName="starRating.js" mode="static" position="foot" type="javascript" />

<content fileName="defaut.html" mode="dynamic" position="placeholder" type="html" />
<content fileName="map.png" mode="static" position="placeholder" type="image" />

<content fileName="swfObject.js" mode="share" position="head" type="javascript" />
<content fileName="expressIntall.swf" mode="share" position="none" type="flash" />
<content fileName="default.swf" mode="static" position="none" type="flash" /></code></pre>

h2. &lt;attribute&gt;

Add or overwrite an attribute in the auto-generated HTML tags for the content type "css", "javascript", "image", "video", "audio".

* Self-close node
* Optional
* [0..n]
* Parent node: "&lt;content&gt;":#content
* Child nodes: "&lt;value&gt;":#value

*Also see*

"Content attributes rules":generation_rules.textile#content-attributes-rules

<pre><code class="xml"><content type="video" fileName="mymovie.ogv" type="static" position="placeholder">
   <attribute name="autoplay">
       <value>autoPlay</value>
   </attribute>
   <attribute name="poster">
        <value>mymovie.jpg</value>
   </attribute>
   <attribute name="controls">
        <value><![CDATA[ {%= CurrentADC.PropValue("controls") ]]></value>
   </attribute>
</content>
<content type="css" fileName="print.css" type="static" position="head">
   <attribute name="rel">
       <value>alternate</value>
   </attribute>
   <attribute name="media">
       <value>print</value>
   </attribute>
</content></code></pre>

h3. Attributes

{background:#007dc5; color:white}. |Attribute name|Require|Type|Description|
|name|true|"xsd:token":http://www.schemacentral.com/sc/xsd/t-xsd_token.html|Name of the attribute to add or overwrite|

h2. &lt;value&gt;

Value of the attribute to add or overwrite.
This value could embed AskiaScript code to make it dynamic.

* "xsd:string":http://www.schemacentral.com/sc/xsd/t-xsd_string.html
* Require
* [1 ]
* Parent node: "&lt;attribute&gt;":#attribute

<pre><code class="xml"><attribute name="autoplay">
   <value><![CDATA[ {%= CurrentADC.PropValue("autoplay") %} ]]></value>
</attribute>
<attribute name="controls">
   <value>true</value>
</attribute></code></pre>

h2. &lt;yield&gt;

Overwrite the auto-generated HTML tags for the content type "css", "javascript", "image", "video", "audio", "flash".
It could embed AskiaScript to make it dynamic, it gives much more control about the generation.

* "xsd:string":http://www.schemacentral.com/sc/xsd/t-xsd_string.html
* Optional
* [0..n]
* Parent node: "&lt;content&gt;":#content

<pre><code class="xml"><content fileName="HTML5Shim.js" type="javascript" mode="static" position="head">
   <yield>
     <![CDATA[
           <!--[if lte IE 9]>
            <script type="text/javascript"  src="{%= CurrentADC.URLTo("static/HTML5Shim.js") %}" ></script>
            <![endif]-->
     ]]>
   </yield>
</content></code></pre>

*"&lt;&lt; Manifest - Info":manifest_info.textile* | *"Manifest - Properties &gt;&gt;":manifest_properties.textile*